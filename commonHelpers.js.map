{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites_js/header_favorites.js","../src/js/favorites_js/quote_of_the_day_favorives.js"],"sourcesContent":["const mobileMenu = document.querySelector('.js-menu');\nconst openMenu = document.querySelector('.js-open-menu');\nconst closeMenu = document.querySelector('.js-close-menu');\n\nconst toggleMenu = function () {\n  const isMenuOpen = mobileMenu.classList.toggle('is-open');\n  document.body.style.overflow = isMenuOpen ? 'hidden' : '';\n};\n\nopenMenu.addEventListener('click', toggleMenu);\ncloseMenu.addEventListener('click', toggleMenu);\n\nwindow\n  .matchMedia('(min-width: 335px)')\n  .addEventListener('change', onMatchMedia);\n\nfunction onMatchMedia(event) {\n  if (!event.matches) return;\n  mobileMenu.classList.remove('is-open');\n  document.body.style.overflow = '';\n}\n","import axios from 'axios';\n\nlet quoteTextEl = document.querySelector('.quoteFavoritesText');\nlet authorEl = document.querySelector('.quoteFavoritesAuthor');\n\nwindow.addEventListener('DOMContentLoaded', async function () {\n    try {\n        // Перевірка, чи дані вже зберігалися раніше\n        let storedData = localStorage.getItem('quoteData');\n        let storedDate = localStorage.getItem('quoteDate');\n\n        let currentDate = new Date();\n        let storedDateObj = storedDate ? new Date(storedDate) : null;\n\n        // Перевірка, чи сьогодні вже був запит, і якщо так, використовуємо збережені дані\n        if (storedData && storedDateObj && isSameDay(currentDate, storedDateObj)) {\n            updateUI(JSON.parse(storedData));\n            return;\n        }\n\n        // Якщо ні дістаємо нові дані з backend\n        let response = await axios.get('https://energyflow.b.goit.study/api/quote');\n        let data = response.data;\n\n        // Зберігаємо отримані дані та дату\n        localStorage.setItem('quoteData', JSON.stringify(data));\n        localStorage.setItem('quoteDate', currentDate.toISOString());\n\n        // Оновлення елементів HTML отриманими даними\n        updateUI(data);\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\nfunction updateUI(data) {\n  quoteTextEl.innerText = data.quote;\n  authorEl.innerText = data.author;\n}\n\nfunction isSameDay(date1, date2) {\n    return (\n        date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n    );\n}\n"],"names":["mobileMenu","openMenu","closeMenu","toggleMenu","isMenuOpen","onMatchMedia","event","quoteTextEl","authorEl","storedData","storedDate","currentDate","storedDateObj","isSameDay","updateUI","data","axios","error","date1","date2"],"mappings":"0FAAA,MAAMA,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAW,SAAS,cAAc,eAAe,EACjDC,EAAY,SAAS,cAAc,gBAAgB,EAEnDC,EAAa,UAAY,CAC7B,MAAMC,EAAaJ,EAAW,UAAU,OAAO,SAAS,EACxD,SAAS,KAAK,MAAM,SAAWI,EAAa,SAAW,EACzD,EAEAH,EAAS,iBAAiB,QAASE,CAAU,EAC7CD,EAAU,iBAAiB,QAASC,CAAU,EAE9C,OACG,WAAW,oBAAoB,EAC/B,iBAAiB,SAAUE,CAAY,EAE1C,SAASA,EAAaC,EAAO,CACtBA,EAAM,UACXN,EAAW,UAAU,OAAO,SAAS,EACrC,SAAS,KAAK,MAAM,SAAW,GACjC,CClBA,IAAIO,EAAc,SAAS,cAAc,qBAAqB,EAC1DC,EAAW,SAAS,cAAc,uBAAuB,EAE7D,OAAO,iBAAiB,mBAAoB,gBAAkB,CAC1D,GAAI,CAEA,IAAIC,EAAa,aAAa,QAAQ,WAAW,EAC7CC,EAAa,aAAa,QAAQ,WAAW,EAE7CC,EAAc,IAAI,KAClBC,EAAgBF,EAAa,IAAI,KAAKA,CAAU,EAAI,KAGxD,GAAID,GAAcG,GAAiBC,EAAUF,EAAaC,CAAa,EAAG,CACtEE,EAAS,KAAK,MAAML,CAAU,CAAC,EAC/B,MACH,CAID,IAAIM,GADW,MAAMC,EAAM,IAAI,2CAA2C,GACtD,KAGpB,aAAa,QAAQ,YAAa,KAAK,UAAUD,CAAI,CAAC,EACtD,aAAa,QAAQ,YAAaJ,EAAY,YAAa,CAAA,EAG3DG,EAASC,CAAI,CAChB,OAAQE,EAAO,CACZ,QAAQ,MAAM,SAAUA,CAAK,CAChC,CACL,CAAC,EAED,SAASH,EAASC,EAAM,CACtBR,EAAY,UAAYQ,EAAK,MAC7BP,EAAS,UAAYO,EAAK,MAC5B,CAEA,SAASF,EAAUK,EAAOC,EAAO,CAC7B,OACID,EAAM,YAAW,IAAOC,EAAM,YAAa,GAC3CD,EAAM,SAAQ,IAAOC,EAAM,SAAU,GACrCD,EAAM,QAAO,IAAOC,EAAM,QAAS,CAE3C"}