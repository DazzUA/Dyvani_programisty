{"version":3,"file":"commonHelpers.js","sources":["../src/img/symbol-defs.svg","../src/js/favorites_js/favorites_section.js"],"sourcesContent":["export default \"__VITE_ASSET__a051084a__\"","import sprite from '../../img/symbol-defs.svg';\nconst fullUrl = window.location.pathname;\nconst lastSlashIndex = fullUrl.lastIndexOf('/');\nconst result = '/page-2.html'; //fullUrl.substring(lastSlashIndex);\n\nfunction checkLocalStorageData(key) {\n  let storageItem = localStorage.getItem(key);\n  if (!storageItem) {\n    localStorage.setItem(key, JSON.stringify([]));\n    storageItem = '[]';\n  }\n  return storageItem;\n}\n\nlet storage = 'favorites'; // ключ для localStorage\nlet storageItem = checkLocalStorageData(storage); // виклик функції з переданим ключем\nlet parsedItem = JSON.parse(storageItem); // Перетворити рядок JSON на об'єкт або масив\n\nconst favorites = document.querySelector('.add-favorites');\nconst favoritesList = document.querySelector('.favorites-list');\nlet id = '';\nlet cardForDelete;\nconst messageInfo = document.querySelector('.message-favorites');\nconst paginationBlock = document.querySelector('.favorites-pagination-block');\nconst favoritesContainerBlock = document.querySelector(\n  '.div-favorites-section'\n);\nconst deleteCards = document.querySelectorAll('.favorites-list-item');\n\n// Функція для створення карти збережених улюблених елементів\nfunction createFavoriteCard(elem) {\n  const markup = createFavoriteCardMarkup(elem);\n\n  // Вставити створену карту в список улюблених\n  favoritesList.insertAdjacentHTML('beforeend', markup);\n}\n\n///**перевіряє чи є в локалсторідж запис і якщо є, то малює картки, інакше показує повідомлення */\nif (result === '/page-2.html') {\n  if (!storageItem || parsedItem.length == 0) {\n    messageInfo.classList.add('is-open-message-favorites');\n    paginationBlock.classList.add('close');\n  } else if (storageItem) {\n    try {\n      // Пройтися по кожному елементу і створити відповідну карту\n      parsedItem.forEach(elem => {\n        createFavoriteCard(elem);\n      });\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n}\n\n/**пагінація */\nif (result === '/page-2.html') {\n  document.addEventListener('DOMContentLoaded', function () {\n    // Функція для відображення пагінації залежно від ширини екрану.\n    function togglePagination() {\n      const currentPage = window.location.pathname; // Отримання поточного шляху сторінки\n      // Перевірка, чи поточна сторінка - '/page-2.html', і ширина екрану менше або дорівнює 767px.\n      if (\n        window.innerWidth <= 767 &&\n        isFavoritesListVisible()\n        /*currentPage === '/fitnes-app/page-2.html' &&\n        window.innerWidth <= 767 &&\n        isFavoritesListVisible()*/\n      ) {\n        // Відображення пагінації для невеликих екранів на сторінці 2.\n        paginationBlock.style.display = 'flex';\n      } else {\n        // Приховати пагінацію для більших екранів або якщо список вибраного вмісту не видимий.\n        paginationBlock.style.display = 'none';\n      }\n    }\n\n    // Function to check if favorites list is visible\n    function isFavoritesListVisible() {\n      return favoritesList && favoritesList.offsetParent !== null;\n    }\n\n    // Function to handle pagination logic\n    function paginate() {\n      // Define items per page based on screen width and visibility of favorites list\n      const itemsPerPage =\n        window.innerWidth <= 767 && isFavoritesListVisible()\n          ? 8\n          : favoritesList.children.length;\n\n      const totalPages = Math.ceil(\n        favoritesList.children.length / itemsPerPage\n      );\n\n      // Show all items if screen width is greater than 767px\n      if (window.innerWidth > 767 && isFavoritesListVisible()) {\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'block';\n        }\n        return;\n      }\n\n      let currentPage = 1;\n\n      // Function to show items for current page\n      function showPage(page) {\n        const startIndex = (page - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n\n        // Hide all items\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'none';\n        }\n\n        // Show items for current page\n        for (\n          let i = startIndex;\n          i < endIndex && i < favoritesList.children.length;\n          i++\n        ) {\n          favoritesList.children[i].style.display = 'block';\n        }\n      }\n\n      // Show the first page initially\n      showPage(currentPage);\n\n      // Generate pagination buttons\n      paginationBlock.innerHTML = '';\n      for (let i = 1; i <= totalPages; i++) {\n        const button = document.createElement('button');\n        button.textContent = i;\n        button.addEventListener('click', function () {\n          currentPage = i;\n          showPage(currentPage);\n          updateActiveButton(currentPage);\n        });\n        paginationBlock.appendChild(button);\n      }\n\n      // Function to update active button\n      function updateActiveButton(currentPage) {\n        const buttons = paginationBlock.querySelectorAll('button');\n        buttons.forEach((button, index) => {\n          if (index === currentPage - 1) {\n            button.classList.add('active-btn');\n          } else {\n            button.classList.remove('active-btn');\n          }\n        });\n      }\n      updateActiveButton(currentPage);\n    }\n\n    // Call paginate initially\n    paginate();\n\n    // Event listener for window resize\n    window.addEventListener('resize', paginate);\n\n    // Function to handle scroll behavior\n    function checkScroll() {\n      if (window.matchMedia('(min-width: 768px)').matches) {\n        favoritesContainerBlock.style.overflowY = 'scroll';\n      } else {\n        favoritesContainerBlock.style.overflowY = 'visible';\n      }\n\n      if (window.matchMedia('(min-width: 1440px)').matches) {\n        favoritesContainerBlock.style.maxHeight = '480px'; // Set maximum height if necessary\n      } else {\n        favoritesContainerBlock.style.maxHeight = 'none';\n      }\n\n      // Зробити скролінг менш інтенсивним і більш плавним\n      const scrollOptions = {\n        behavior: 'smooth',\n        block: 'start', // Налаштування скролінгу починається від верхнього краю елементу\n      };\n\n      window.scrollBy(0, 10); // Змінити значення, яке ви вважаєте відповідним\n    }\n\n    // Перевірка поведінки прокрутки при першому завантаженні\n    checkScroll();\n\n    // Check pagination visibility on initial load\n    togglePagination();\n\n    // Перевірка видимості пагінації та ініціалізація пагінації під час зміни розміру вікна\n    window.addEventListener('resize', function () {\n      togglePagination();\n      paginate();\n      checkScroll();\n    });\n\n    // Initialize pagination if needed\n    if (isFavoritesListVisible() && favoritesList.children.length >= 8) {\n      paginate();\n    }\n  });\n}\n\n//**Ігорю на кнопку*/\n\nconst favoritesButton = document.querySelector('.add-favorites');\nfunction toggleFavorite() {\n  if (favoritesButton.textContent.trim() == 'Add to favorites') {\n    parsedItem.push({\n      id: '64f389465ae26083f39b17df', //id\n      gifUrl: 'https://ftp.goit.study/img/power-pulse/gifs/0067.gif', //gif.src\n      name: 'barbell one arm snatch', //name.textContent\n      rating: '3.67', //rating.textContent\n      target: 'cardiovascular system', //target.textContent\n      popular: '5548', //popular.textContent\n      bodyPart: 'shoulders', //bodyPart.textContent\n      equipment: 'barbell', //equipment.textContent\n      burnedCalories: '345', //burnedCalories.textContent\n      description:\n        'Located at the shoulders, deltoids have three heads: anterior, lateral, and posterior. They are involved in various arm movements like lifting and rotating. Exercises include shoulder press, lateral raises, and front raises.', //description.textContent\n    });\n    localStorage.setItem(storage, JSON.stringify(parsedItem));\n    favoritesButton.textContent = `Delete from favorites`;\n    //favoritesButton.innerHTML = `Delete from favorites`;\n  }\n  /*else {\n    const index = parsedItem.findIndex(item => item.id == id);\n    parsedItem.splice(index, 1);\n    localStorage.setItem(storage, JSON.stringify(parsedItem));\n    const fullCards = document.querySelectorAll('.favorites-list-item');\n\n    favoritesButton.textContent = `Add to favorities`;\n    //favoritesButton.innerHTML = `Add to favorities ${heartIcon}`;\n    if (document.querySelector(`.favorites-list-item[id=\"${id}\"]`)) {\n      fullCards.forEach(elem => {\n        if (elem.id == id) cardForDelete = elem;\n      });\n      list.removeChild(cardForDelete);\n      if (!storageItem || parsedItem.length == 0) {\n        messageInfo.classList.add('is-open-message-info');\n        paginationBlock.classList.add('close');\n      }\n    }\n  }*/\n}\n\nfavoritesButton.addEventListener('click', toggleFavorite);\n\nfunction handleFavoritesListClick(event) {\n  if (\n    event.target.classList.contains('favorites-btn-trash') ||\n    event.target.classList.contains('favorites-icon-delete') ||\n    event.target.classList.contains('favorites-icon-delete-use')\n  ) {\n    const id = event.currentTarget.id;\n    deleteCard(id);\n  }\n}\n\nif (result === '/page-2.html') {\n  favoritesList.addEventListener('click', handleFavoritesListClick);\n}\n\nfunction deleteCard(id) {\n  const index = parsedItem.findIndex(item => item.id == id);\n  parsedItem.splice(index, 1);\n  localStorage.setItem(storage, JSON.stringify(parsedItem));\n  deleteCards.forEach(elem => {\n    if (elem.id == id) cardForDelete = elem;\n  });\n  if (cardForDelete) {\n    favoritesList.removeChild(cardForDelete);\n  }\n  if (!storageItem || parsedItem.length == 0) {\n    messageInfo.classList.add('is-open-message-info');\n    paginationBlock.classList.add('close');\n  }\n  renderFavoriteCards();\n}\n\nfunction renderFavoriteCards() {\n  // Очищаємо поточні карточки зі списку\n  favoritesList.innerHTML = '';\n  // Рендеримо кожну карточку у списку\n  parsedItem.forEach(elem => {\n    const markup = createFavoriteCardMarkup(elem);\n    // Вставляємо розмітку карточки у список улюблених елементів\n    favoritesList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\nfunction createFavoriteCardMarkup(elem) {\n  return `<li class=\"favorites-list-item\" id=\"${elem.id}\">\n        <div class=\"favorites-card-header\">\n            <div class=\"favorites-workout\">\n                <p>WORKOUT</p>\n            </div>\n            <button class=\"favorites-btn-trash\" aria-label=\"trash\" type=\"button\">\n                <svg class=\"favorites-icon-delete\" width=\"16\" height=\"16\" fill=\"none\">\n                    <use class=\"favorites-icon-delete-use\" href=\"${sprite}#icon-trash\"></use>\n                </svg>\n            </button>\n            <button\n                data-id=\"${elem.id}\"\n                class=\"favorites-btn-arrow\"\n                aria-label=\"start\"\n                type=\"button\">Start\n                    <svg class=\"favorites-icon-arrow\" width=\"14\" height=\"14\" stroke=\"#1B1B1B\">\n                        <use class=\"favorites-icon-arrow-use\" href=\"${sprite}#icon-arrow\"></use>\n                    </svg>\n            </button>\n            </div>\n            <div class=\"favorites-main-container\">\n    \n            <div class=\"favorite-icon-run-man\">\n            <svg width=\"14\" height=\"14\">\n      <use href=\"${sprite}#icon-running\"></use>\n    </svg></div>                  \n                <h3 class=\"favorites-name-part\">${elem.name}</h3>\n            </div>\n            <div class=\"favorites-card-footer\">\n            <ul class=\"favorites-card-footer-list\">\n                <li class=\"favorites-card-footer-item\">\n                    <div class=\"favorites-card-footer-wrapper\">\n                        <h4 class=\"favorites-card-footer-title\">Burned calories:</h4>\n                        <p class=\"favorites-card-footer-block\">${elem.burnedCalories}/3min</p>\n                    </div>\n                    <div class=\"favorites-card-footer-wrapper\">\n                        <h4 class=\"favorites-card-footer-title\">Body part:</h4>\n                        <p class=\"favorites-card-footer-block\">${elem.bodyPart}</p>\n                    </div>\n                    <div class=\"favorites-card-footer-wrapper\">\n                        <h4 class=\"favorites-card-footer-title\">Target:</h4>\n                        <p class=\"favorites-card-footer-block\">${elem.target}</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </li>`;\n}\n\nexport { toggleFavorite };\n"],"names":["sprite","fullUrl","checkLocalStorageData","key","storageItem","storage","parsedItem","favoritesList","cardForDelete","messageInfo","paginationBlock","favoritesContainerBlock","deleteCards","createFavoriteCard","elem","markup","createFavoriteCardMarkup","error","togglePagination","isFavoritesListVisible","paginate","itemsPerPage","totalPages","currentPage","showPage","page","startIndex","endIndex","i","button","updateActiveButton","index","checkScroll","favoritesButton","toggleFavorite","handleFavoritesListClick","event","id","deleteCard","item","renderFavoriteCards"],"mappings":"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"}