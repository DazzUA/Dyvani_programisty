{"version":3,"file":"footer-b1d16ad2.js","sources":["../../src/js/home_js/header_hero.js","../../src/js/home_js/quote_of_the_day.js","../../src/js/home_js/exercises_filters.js","../../src/js/home_js/exercises_subcategories.js","../../src/js/home_js/exercises_search.js","../../src/js/home_js/footer.js"],"sourcesContent":["const mobileMenu = document.querySelector('.js-menu');\nconst openMenu = document.querySelector('.js-open-menu');\nconst closeMenu = document.querySelector('.js-close-menu');\n\nconst toggleMenu = function () {\n  const isMenuOpen = mobileMenu.classList.toggle('is-open');\n  document.body.style.overflow = isMenuOpen ? 'hidden' : '';\n};\n\nopenMenu.addEventListener('click', toggleMenu);\ncloseMenu.addEventListener('click', toggleMenu);\n\nwindow\n  .matchMedia('(min-width: 335px)')\n  .addEventListener('change', onMatchMedia);\n\nfunction onMatchMedia(event) {\n  if (!event.matches) return;\n  mobileMenu.classList.remove('is-open');\n  document.body.style.overflow = '';\n}\n","import axios from 'axios';\n\nlet quoteTextEl = document.querySelector('.quoteText');\nlet authorEl = document.querySelector('.quoteAuthor');\n\nwindow.addEventListener('DOMContentLoaded', async function () {\n    try {\n        // Перевірка, чи дані вже зберігалися раніше\n        let storedData = localStorage.getItem('quoteData');\n        let storedDate = localStorage.getItem('quoteDate');\n\n        let currentDate = new Date();\n        let storedDateObj = storedDate ? new Date(storedDate) : null;\n\n        // Перевірка, чи сьогодні вже був запит, і якщо так, використовуємо збережені дані\n        if (storedData && storedDateObj && isSameDay(currentDate, storedDateObj)) {\n            updateUI(JSON.parse(storedData));\n            return;\n        }\n\n        // Якщо ні дістаємо нові дані з backend\n        let response = await axios.get('https://energyflow.b.goit.study/api/quote');\n        let data = response.data;\n\n        // Зберігаємо отримані дані та дату\n        localStorage.setItem('quoteData', JSON.stringify(data));\n        localStorage.setItem('quoteDate', currentDate.toISOString());\n\n        // Оновлення елементів HTML отриманими даними\n        updateUI(data);\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\nfunction updateUI(data) {\n  quoteTextEl.innerText = data.quote;\n  authorEl.innerText = data.author;\n}\n\nfunction isSameDay(date1, date2) {\n    return (\n        date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n    );\n}\n","import axios from 'axios';\n\nconst filterButtons = document.querySelector('.FilterButtons');\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst pagination = document.querySelector('.Pagination');\nconst form = document.querySelector('.ExercisesForm');\nconst ExerciseFiltersListSubcategories = document.querySelector(\n  '.ExerciseFiltersListSubcategories'\n);\nconst PaginationSubcategories = document.querySelector(\n  '.PaginationSubcategories'\n);\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet filterValueDefault = 'Muscles';\nlet currentPage = 1;\nlet screenWidth = window.innerWidth;\nlet currentLimit = 0;\n//-----------------------------------------------Слухачі------------------------------------------------------------------------\nfilterButtons.addEventListener('click', filterBtnClick);\npagination.addEventListener('click', onPaginationFilterPages);\n//--------------------------------------------------Кількість картинок в залежності від розміру екрана---------------------------\nif (screenWidth <= 375) {\n  currentLimit = 8;\n} else if (screenWidth <= 768) {\n  currentLimit = 12;\n} else {\n  currentLimit = 12;\n}\n//---------------------------------------------------Запит на сервер-------------------------------------------------------------\nasync function getExercises() {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filterValueDefault,\n        page: currentPage,\n        limit: currentLimit,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Дефолтний запит для відображення Muscles при загрузці сторінки-----------------------\n\nasync function fetchDefaultApiUrl() {\n  try {\n    const response = await getExercises().then(data => {\n      const { results, totalPages, page } = data;\n      if (results && results.length > 0) {\n        exerciseFiltersList.innerHTML = markupExercises(results);\n\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        console.error('No exercises found.');\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n  }\n}\n\n//---------------------------------------------------Виклик функцію для відображення Muscles при загрузці сторінки-----------------------\n\nfetchDefaultApiUrl();\n\n//-----------------------------------------Функція фільтрів Muscles, Body parts, Equipment--------------------------------------------\nasync function filterBtnClick(event) {\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  event.preventDefault();\n  form.classList.add('visually-hidden');\n  ExerciseFiltersListSubcategories.classList.add('visually-hidden');\n  exerciseFiltersList.classList.remove('visually-hidden');\n  pagination.innerHTML = '';\n  PaginationSubcategories.innerHTML = '';\n\n  currentPage = 1;\n  const filterValue = event.target;\n  const qwer = filterValue.dataset.filter;\n  filterValueDefault = qwer;\n  exerciseFiltersList.innerHTML = '';\n  Array.from(event.currentTarget.children).map(item => {\n    if (item.textContent !== event.target.textContent) {\n      item.classList.remove('ButtonIsActive');\n    } else {\n      event.target.classList.add('ButtonIsActive');\n    }\n  });\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  try {\n    getExercises(qwer).then(data => {\n      const { results, totalPages, page } = data;\n      exerciseFiltersList.innerHTML = markupExercises(results);\n\n      if (1) {\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        pagination.innerHTML = '';\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n//-----------------------------------------Функція перехід по сторінкам------------------------------------------------------\n\nasync function onPaginationFilterPages(e) {\n  if (e.target.tagName !== 'BUTTON') {\n    return;\n  }\n  currentPage = e.target.textContent;\n  Array.from(e.currentTarget.children).map(item => {\n    if (item.textContent !== currentPage) {\n      item.classList.remove('PaginationBtnIsActive');\n    } else {\n      e.target.classList.add('PaginationBtnIsActive');\n    }\n  });\n  exerciseFiltersList.innerHTML = '';\n  try {\n    const { results, page, totalPages } = await getExercises();\n    if (page === totalPages) {\n      return;\n    }\n\n    exerciseFiltersList.innerHTML = markupExercises(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Розмітка Muscles, Body parts, Equipment--------------------------------------------\n\nfunction markupExercises(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='FilterList ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div class=\"FilterText\">\n          <p class=\"FilterExercises\">${name}</p>\n          <p class=\"FilterName\">${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n}\n//---------------------------------------------------Розмітка номерів сторінки--------------------------------------------\n\nfunction paginationPages(page, totalPages) {\n  let paginationHtml = '';\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"PaginationBtn PaginationBtnIsActive\" type=\"button\">${i}</button>`;\n  }\n  return paginationHtml;\n}\n\nexport { onPaginationFilterPages };\nexport { paginationPages };\nexport { markupExercises };\n","import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { onPaginationFilterPages } from './exercises_filters';\nimport { paginationPages } from './exercises_filters';\nimport { markupExercises } from './exercises_filters';\nimport icons from '/img/symbol-defs.svg';\n\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst ExercisesHead = document.querySelector('.ExercisesHead');\nconst pagination = document.querySelector('.Pagination');\nconst PaginationSubcategories = document.querySelector(\n  '.PaginationSubcategories'\n);\nconst ExerciseFiltersListSubcategories = document.querySelector(\n  '.ExerciseFiltersListSubcategories'\n);\nconst form = document.querySelector('.ExercisesForm');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet currentPage = 1;\nlet filterValue;\nlet nameValue;\n\nexerciseFiltersList.addEventListener('click', onCardClick);\n\nasync function onCardClick(event) {\n  form.classList.remove('visually-hidden');\n  pagination.innerHTML = '';\n  exerciseFiltersList.classList.add('visually-hidden');\n  ExerciseFiltersListSubcategories.classList.remove('visually-hidden');\n  // exerciseFiltersList.removeEventListener('click', onCardClick);\n  pagination.removeEventListener('click', onPaginationFilterPages);\n  pagination.removeEventListener('click', onPaginationPagesbyFilter);\n  if (event.target === event.currentTarget) {\n    return;\n  }\n\n  const liEl = event.target.closest('.ExercisesItem'); // при кліку на картку шукаємо найближчий елемент у якого буде заданий селектор (це li)\n  filterValue = liEl.dataset.filter; //Muscles   // тепер можемо отримати li дата-атрибути\n  nameValue = liEl.dataset.name; // abductors\n  try {\n    const { page, totalPages, results } = await getExercisesByFilter(\n      filterValue,\n      nameValue\n    );\n    ExerciseFiltersListSubcategories.innerHTML = createMarkUp(results); // це буде масив об'єктів\n\n    // const FilterBtn = document.querySelector('#FilterBtn'); // додаємо на три кнопки фільтрів слухача по кліку\n    // FilterBtn.addEventListener('click', onBtnClick);\n    // FilterBtn.addEventListener('click', onBtnClickForFormDelete);\n    pagination.innerHTML = ''; // пагінація\n    if (totalPages > 1) {\n      const pag = paginationPages(page, totalPages);\n      PaginationSubcategories.innerHTML = pag; // додаємо в div розмітку сторінок\n    }\n    PaginationSubcategories.addEventListener(\n      'click',\n      onPaginationSubcategoriesPage\n    );\n    // pagination.addEventListener('click', onPaginationSubcategoriesPage); // вішаємо на дів з кнопками нумерації сторінок слухача подій при кліку\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n\nfunction onBtnClickForFormDelete() {\n  const ExercisesForm = document.querySelector('.ExercisesForm');\n  // ???vформа видаляється при першому кліку, а при другому знову хоче видалити, а її вже нема\n  // ExercisesForm.remove();\n  FilterBtn.removeEventListener('click', onBtnClickForFormDelete);\n}\n\nasync function getExercisesByFilter(filterValue, nameValue, currentPage) {\n  // в запиті можливі три ключі, тому відповідно до значення фільтра пишемо цей ключ\n  try {\n    if (filterValue === 'Muscles') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          muscles: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else if (filterValue === 'Body parts') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          bodypart: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          equipment: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    }\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(({ rating, name, burnedCalories, time, bodyPart, target, _id }) => {\n      return `<li class=\"WorkoutCard ExerciseCategoryList id ='${_id}\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='${icons}#icon-star'></use>\n        </svg></div>\n        </div>\n        \n          <button type=\"button\" class=\"StartBtn\">\n  START<svg width='13' height='13'>\n          <use href='${icons}#icon-arrow'></use>\n        </svg>\n</button>\n        \n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='${icons}#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\n// це виклик функції Данила. Треба щоб він зробив експорт\n// функція, яка спрацьовує коли ми клікаємо по фільтру (Muscle, Body Part, Equipment) і повертаємось назад\nasync function onBtnClick(event) {\n  exerciseFiltersList.classList.re('visually-hidden');\n\n  ExerciseFiltersListSubcategories.innerHTML = '';\n  exerciseFiltersList.classList.remove('visually-hidden');\n  // ExerciseFiltersListSubcategories.classList.add('visually-hidden');\n  const filtersBtnArray = document.querySelectorAll('.ItemExercises');\n  filtersBtnArray.forEach(btn => {\n    btn.classList.remove('FilterBtnIsActive');\n  });\n  exerciseFiltersList.addEventListener('click', onCardClick);\n  exerciseFiltersList.classList.remove('ExerciseCategoryList');\n  exerciseFiltersList.classList.add('ExerciseFiltersList');\n  currentPage = 1; // робимо поточну сторінку першою\n  // pagination.removeEventListener('click', onPaginationSubcategoriesPage); // видаляємо з нумерації сторінок слухача попереднього\n  Array.from(event.currentTarget.children).map(item => {\n    if (item.textContent !== event.target.textContent) {\n      item.classList.remove('ButtonIsActive');\n    } else {\n      event.target.classList.add('ButtonIsActive');\n    }\n  });\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  filterValue = event.target.dataset.filter; // дістаємо значення дата-атрибута елемента, на який клацнули\n  try {\n    const { page, totalPages, results } = await getExercise(filterValue);\n    exerciseFiltersList.innerHTML = markupExercises(results); // робимо розмітку всередині ul по фільтру починаюxи з першої сторінки\n    if (totalPages > 1) {\n      const pag = paginationPages(page, totalPages);\n      PaginationSubcategories.innerHTML = pag;\n    } else {\n      PaginationSubcategories.innerHTML = '';\n    }\n    PaginationSubcategories.addEventListener(\n      'click',\n      onPaginationPagesbyFilter\n    );\n    // тут видалення тексту після слеша та форми\n    const titleExercises = document.querySelector('.TitleExercises');\n    titleExercises.innerHTML = 'Exercises';\n    // ------------------------------------------\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n\nasync function getExercise(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: currentPage,\n        limit: 12,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n/!Цю функцію я імпортував у себе/;\n// function markupExercise(results) {\n//   const markup = results\n//     .map(\n//       ({\n//         name,\n//         filter,\n//         imgUrl,\n//       }) => ` <li class='FilterList ExercisesItem' data-filter='${filter}' data-name='${name}'>\n//         <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n//         <div class=\"FilterText\">\n//           <p class=\"FilterExercises\">${name}</p>\n//           <p class=\"FilterName\">${filter}</p>\n//         </div>\n//       </li>`\n//     )\n//     .join('');\n//   return markup;\n// }\n// ---------------------------------------------------ПАГІНАЦІЯ------------------------------------------------------------\n\n/!Цю функцію я імпортував у себе/;\n// function paginationPages(totalPages) {\n//   let paginationHtml = '';\n//   for (let i = 1; i <= totalPages; i += 1) {\n//     paginationHtml += `<button class=\"pagination-btn\" type=\"button\">${i}</button>`;\n//   }\n\n//   return paginationHtml; // в залежності від к-ті сторінок повертає таку кількість кнопок в розмітці\n// }\n\n/! В цій функції я змінив назву, була onPaginationPage/;\n//----\nasync function onPaginationSubcategoriesPage(e) {\n  if (e.target.tagName !== 'BUTTON') {\n    return;\n  }\n  currentPage = e.target.textContent; // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки: 1, 4, 7...)\n  try {\n    // запит на картки по фільтру\n    const { results } = await getExercisesByFilter(\n      filterValue,\n      nameValue,\n      currentPage\n    );\n    ExerciseFiltersListSubcategories.innerHTML = createMarkUp(results); // робимо розмітку підкатегорій відповідно до номеру сторінки\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n\n// вішаємо слухач на дів з цифрами сторінок\n\nasync function onPaginationPagesbyFilter(e) {\n  currentPage = e.target.textContent;\n  try {\n    // запит на картки по фільтру\n    const { results } = await getExercise(filterValue, currentPage);\n    exerciseFiltersList.innerHTML = markupExercises(results);\n  } catch (error) {\n    createIziToastError('Error');\n  }\n}\n\n// Импорт необходимых библиотек\n\n// function onStartBtnClick(event) {\n//   divEl = event.target.closest('.StartBtn');\n//   console.log(divEl);\n//   // idValue = divEl.dataset.id;\n//   // console.log(idValue);\n// }\nfunction createIziToastError(notification) {\n  iziToast.error({\n    message: notification,\n    messageColor: '#FAFAFB',\n    messageLineHeight: '24px',\n    messageSize: '16px',\n    position: 'topRight',\n    backgroundColor: '#EF4040',\n    maxWidth: '350px',\n    timeout: false,\n  });\n}\n","// Что реализовано в коде:\n// Пользователь может вводить поисковый запрос и отправлять его на сервер;\n// После получения ответа от сервера, результаты поиска отображаются на странице;\n// Созданы элементы списка с названиями упражнений и добавляены в список результатов поиска.\n// В случае отсутствия результатов поиска выводится соответствующее уведомление (функция showNoResultsToast).\n\nimport axios from 'axios';\n\n// базовый URL для отправки запросов к API\nconst BASE_URL = 'https://energyflow.b.goit.study/api/exercises';\n\n// объект с ссылками на элементы формы поиска\nconst refs = {\n  searchForm: document.querySelector('.ExercisesForm'), // форму поиска\n  searchInput: document.querySelector('.SearchInput'), // поле ввода,\n  searchBtn: document.querySelector('.SearchButton'), // кнопку\n  searchIcon: document.querySelector('.IconSearch'), // иконку\n  searchLable: document.querySelector('#search'), // элемент формы <lable>\n  searchList: document.querySelector('.SearchList'), // добавляем элемент searchList\n};\n\n// передаем параметры запроса при выполнении запроса к API. Задаем начальные параметры для поиска.\nconst queryParams = {\n  query: '', // строка запроса для поиска\n  page: 1, // по умолчанию отображается первая страница результатов\n};\n\n// Обрабатываем событие отправки формы поиска в функции handleSearch. Очищаем список результатов поиска, обновляем параметроы запроса и вызываем функцию onFormSubmit.\n\nasync function handleSearch(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение формы\n\n  // Очищаем список результатов поиска перед новым запросом\n  refs.searchList.innerHTML = '';\n\n  // Обновляем параметры запроса queryParams.\n  queryParams.page = 1;\n  const form = event.currentTarget;\n  queryParams.query = form.elements.query.value.trim();\n\n  if (!queryParams.query) {\n    return;\n  }\n\n  try {\n    const card = await onFormSubmit(queryParams);\n    createMarkUp(card); // передаем массив упражнений из объекта card\n  } catch (error) {\n    console.log(error);\n  }\n}\n// Добавляем слушатель события submit на форму поиска (searchForm) и вызывает функцию handleSearch при отправке формы\n\nrefs.searchForm.addEventListener('submit', handleSearch);\n\n// Определяем асинхронную функцию onFormSubmit\n\nasync function onFormSubmit(queryParams) {\n  try {\n    // Выполняем GET-запрос к API с передачей параметров запроса. Результат запроса сохраняем в переменной response\n    const response = await axios.get(BASE_URL, {\n      params: {\n        filter: queryParams.query,\n        keyword: queryParams.query, // передаем значение из свойства query объекта queryParams, которое содержит строку ключевого слова для поиска\n        page: queryParams.page, // передаем значение из свойства page объекта queryParams, которое содержит номер страницы\n        limit: 9,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error); // Вывод ошибки в консоль при возникновении ошибки запроса\n  }\n}\n// Определяем функцию createMarkUp. Функция принимает массив упражнений. Если массив пустой, вызывается функция showNoResultsToast. Если нет - создаются элементы списка 'li' с названиями упражнений и добавляются в список результатов поиска\n\n// Функция для вывода всплывающего уведомления с сообщением об отсутствии результатов поиска\nfunction showNoResultsToast() {\n  const noResultsMessageContainer = document.createElement('div'); // контейнер для оформления сообщения\n  noResultsMessageContainer.classList.add('NoResultsMessageContainer'); // добавил класс для контейнера\n\n  const noResultsMessage = document.createElement('div'); // контейнер для текста\n  noResultsMessage.classList.add('NoResultsMessage'); // добавил класс для сообщения\n  noResultsMessage.innerHTML =\n    'Unfortunately, <span class=\"SearchNoResult\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.';\n\n  noResultsMessageContainer.appendChild(noResultsMessage); // добавил сообщение внутрь контейнера, в котором это сообщение находится\n  document.body.appendChild(noResultsMessageContainer); // добавил контейнер с сообщением на страницу внутрь <body>, чтобы показать всплывающее уведомление\n}\n\n// Создаем разметку карточек упражнений по фильтрам и ключевому слову\n\nfunction createMarkUp(array) {\n  if (exercises.length === 0) {\n    if (typeof showNoResultsToast === 'function') {\n      showNoResultsToast(); // Вызов функции showNoResultsToast при отсутствии результатов поиска\n    } else {\n      exercises.forEach(exercise => {\n        const exerciseItem = document.createElement('li');\n        exerciseItem.textContent = exercise.name;\n        refs.searchList.appendChild(exerciseItem);\n      });\n    }\n    const markup = array\n      .map(({ rating, name, burnedCalories, time, bodyPart, target, _id }) => {\n        return `<li class=\"WorkoutCard\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-star'></use>\n        </svg></div>\n        </div>\n        <div class='StartBtn' data-id='${_id}'>\n          <p>Start</p>\n          <svg width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-arrow'></use>\n        </svg>\n        </div>\n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='./img/symbol-defs.svg#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n\n    </li>`;\n      })\n      .join('');\n    return markup;\n  }\n}\nexport { handleSearch }; // нужно проверить импорт у Юли\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport axios from 'axios';\n\nconst refs = {\n  form: document.querySelector('.FooterForm'),\n  input: document.querySelector('.FormInput'),\n  submit: document.querySelector('.ModalButton'),\n};\nconst BASE_URL = 'https://energyflow.b.goit.study/api/subscription';\nconst localStorageKey = 'feedback-form-state';\nconst localFormData = JSON.parse(localStorage.getItem(localStorageKey));\n\nif (localFormData !== null && localFormData !== undefined) {\n  refs.input.value = localFormData.email;\n} else {\n  refs.input.value = '';\n}\n\nrefs.submit.addEventListener('click', searchForm);\nasync function searchForm(event) {\n  const email = refs.input.value.trim();\n  event.preventDefault();\n  try {\n    const response = await axios.post(BASE_URL, {\n      email: email,\n    });\n    createMessage(\n      JSON.stringify(JSON.parse(response.request.responseText).message)\n    );\n    refs.input.value = '';\n  } catch (error) {\n    createMessage(\n      JSON.stringify(JSON.parse(error.request.responseText).message)\n    );\n\n    refs.input.value = '';\n  }\n}\nfunction createMessage(message) {\n  iziToast.show({\n    position: 'topRight',\n    message: message,\n    maxWidth: '352',\n    messageColor: '#fff',\n    messageSize: '15px',\n    backgroundColor: 'rgba(27, 27, 27)',\n    close: false,\n    closeOnClick: true,\n  });\n}\n// loader\n// const loaderForm = document.querySelector('.loader');\n// loader для очікування відповіді на клік\n// function showLoader(state = true) {\n//   refs.loaderForm.style.display = !state ? 'none' : 'inline-block';\n//   filterButtons.disabled = state;\n// }\n// scroll up\nconst buttonBackToTopEl = document.querySelector('.ScrollUp');\n\nbuttonBackToTopEl.addEventListener('click', async () => {\n  await scrollToTop();\n});\n\nwindow.onscroll = async () => {\n  await backToTopButton();\n};\n\nasync function scrollToTop() {\n  window.scrollTo({ top: 0 });\n}\n\nasync function backToTopButton() {\n  const scrollPosition =\n    document.body.scrollTop || document.documentElement.scrollTop;\n\n  if (scrollPosition > 20) {\n    buttonBackToTopEl.classList.remove('visually-hidden');\n  } else {\n    buttonBackToTopEl.classList.add('visually-hidden');\n  }\n}\n"],"names":["mobileMenu","openMenu","closeMenu","toggleMenu","isMenuOpen","onMatchMedia","event","quoteTextEl","authorEl","storedData","storedDate","currentDate","storedDateObj","isSameDay","updateUI","data","axios","error","date1","date2","filterButtons","exerciseFiltersList","pagination","form","ExerciseFiltersListSubcategories","PaginationSubcategories","BASE_URL","filterValueDefault","currentPage","screenWidth","currentLimit","filterBtnClick","onPaginationFilterPages","getExercises","fetchDefaultApiUrl","response","results","totalPages","page","markupExercises","pag","paginationPages","qwer","item","name","filter","imgUrl","paginationHtml","i","filterValue","nameValue","onCardClick","onPaginationPagesbyFilter","liEl","getExercisesByFilter","createMarkUp","onPaginationSubcategoriesPage","createIziToastError","array","rating","burnedCalories","time","bodyPart","target","_id","icons","getExercise","notification","iziToast","refs","queryParams","handleSearch","card","onFormSubmit","showNoResultsToast","noResultsMessageContainer","noResultsMessage","exercise","exerciseItem","localStorageKey","localFormData","searchForm","email","createMessage","message","buttonBackToTopEl","scrollToTop","backToTopButton"],"mappings":"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"}