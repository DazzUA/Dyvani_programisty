{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites_js/header_favorites.js","../src/js/favorites_js/quote_of_the_day_favorives.js","../src/js/favorites_js/favorites_section.js"],"sourcesContent":["const mobileMenu = document.querySelector('.js-menu');\nconst openMenu = document.querySelector('.js-open-menu');\nconst closeMenu = document.querySelector('.js-close-menu');\n\nconst toggleMenu = function () {\n  const isMenuOpen = mobileMenu.classList.toggle('is-open');\n  document.body.style.overflow = isMenuOpen ? 'hidden' : '';\n};\n\nopenMenu.addEventListener('click', toggleMenu);\ncloseMenu.addEventListener('click', toggleMenu);\n\nwindow\n  .matchMedia('(min-width: 335px)')\n  .addEventListener('change', onMatchMedia);\n\nfunction onMatchMedia(event) {\n  if (!event.matches) return;\n  mobileMenu.classList.remove('is-open');\n  document.body.style.overflow = '';\n}\n","import axios from 'axios';\n\nlet quoteTextEl = document.querySelector('.quoteFavoritesText');\nlet authorEl = document.querySelector('.quoteFavoritesAuthor');\n\nwindow.addEventListener('DOMContentLoaded', async function () {\n    try {\n        // Перевірка, чи дані вже зберігалися раніше\n        let storedData = localStorage.getItem('quoteData');\n        let storedDate = localStorage.getItem('quoteDate');\n\n        let currentDate = new Date();\n        let storedDateObj = storedDate ? new Date(storedDate) : null;\n\n        // Перевірка, чи сьогодні вже був запит, і якщо так, використовуємо збережені дані\n        if (storedData && storedDateObj && isSameDay(currentDate, storedDateObj)) {\n            updateUI(JSON.parse(storedData));\n            return;\n        }\n\n        // Якщо ні дістаємо нові дані з backend\n        let response = await axios.get('https://energyflow.b.goit.study/api/quote');\n        let data = response.data;\n\n        // Зберігаємо отримані дані та дату\n        localStorage.setItem('quoteData', JSON.stringify(data));\n        localStorage.setItem('quoteDate', currentDate.toISOString());\n\n        // Оновлення елементів HTML отриманими даними\n        updateUI(data);\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\nfunction updateUI(data) {\n  quoteTextEl.innerText = data.quote;\n  authorEl.innerText = data.author;\n}\n\nfunction isSameDay(date1, date2) {\n    return (\n        date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n    );\n}\n","import sprite from '/img/symbol-defs.svg';\nconst fullUrl = window.location.pathname;\nconst lastSlashIndex = fullUrl.lastIndexOf('/');\nconst result = fullUrl.substring(lastSlashIndex);\n\nfunction checkLocalStorageData(key) {\n  let storageItem = localStorage.getItem(key);\n  if (!storageItem) {\n    localStorage.setItem(key, JSON.stringify([]));\n    storageItem = '[]';\n  }\n  return storageItem;\n}\n\nlet storage = 'favorites'; // ключ для localStorage\nlet storageItem = checkLocalStorageData(storage); // виклик функції з переданим ключем\nlet parsedItem = JSON.parse(storageItem); // Перетворити рядок JSON на об'єкт або масив\n\nconst favorites = document.querySelector('.add-favorites');\nconst favoritesList = document.querySelector('.favorites-list');\nlet id = '';\nlet cardForDelete;\nconst messageInfo = document.querySelector('.message-favorites');\nconst paginationBlock = document.querySelector('.favorites-pagination-block');\nconst favoritesContainerBlock = document.querySelector(\n  '.div-favorites-section'\n);\nconst deleteCards = document.querySelectorAll('.favorites-list-item');\n\n// Функція для створення карти збережених улюблених елементів\nfunction createFavoriteCard(elem) {\n  const markup = createFavoriteCardMarkup(elem);\n\n  // Вставити створену карту в список улюблених\n  favoritesList.insertAdjacentHTML('beforeend', markup);\n}\n\n///**перевіряє чи є в локалсторідж запис і якщо є, то малює картки, інакше показує повідомлення */\nif (result === '/favorites.html') {\n  if (!storageItem || parsedItem.length == 0) {\n    messageInfo.classList.add('is-open-message-favorites');\n    paginationBlock.classList.add('close');\n  } else if (storageItem) {\n    try {\n      // Пройтися по кожному елементу і створити відповідну карту\n      parsedItem.forEach(elem => {\n        createFavoriteCard(elem);\n      });\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n}\n\n/**пагінація */\nif (result === '/favorites.html') {\n  document.addEventListener('DOMContentLoaded', function () {\n    // Функція для відображення пагінації залежно від ширини екрану.\n    function togglePagination() {\n      const currentPage = window.location.pathname; // Отримання поточного шляху сторінки\n      // Перевірка, чи поточна сторінка - '/favorites.html', і ширина екрану менше або дорівнює 767px.\n      if (\n        /*window.innerWidth <= 767 &&\n        isFavoritesListVisible()*/\n        currentPage === '/Dyvani_programisty/favorites.html' &&\n        window.innerWidth <= 767 &&\n        isFavoritesListVisibl\n      ) {\n        // Відображення пагінації для невеликих екранів на сторінці 2.\n        paginationBlock.style.display = 'flex';\n      } else {\n        // Приховати пагінацію для більших екранів або якщо список вибраного вмісту не видимий.\n        paginationBlock.style.display = 'none';\n      }\n    }\n\n    // Function to check if favorites list is visible\n    function isFavoritesListVisible() {\n      return favoritesList && favoritesList.offsetParent !== null;\n    }\n\n    // Function to handle pagination logic\n    function paginate() {\n      // Define items per page based on screen width and visibility of favorites list\n      const itemsPerPage =\n        window.innerWidth <= 767 && isFavoritesListVisible()\n          ? 8\n          : favoritesList.children.length;\n\n      const totalPages = Math.ceil(\n        favoritesList.children.length / itemsPerPage\n      );\n\n      // Show all items if screen width is greater than 767px\n      if (window.innerWidth > 767 && isFavoritesListVisible()) {\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'block';\n        }\n        return;\n      }\n\n      let currentPage = 1;\n\n      // Function to show items for current page\n      function showPage(page) {\n        const startIndex = (page - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n\n        // Hide all items\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'none';\n        }\n\n        // Show items for current page\n        for (\n          let i = startIndex;\n          i < endIndex && i < favoritesList.children.length;\n          i++\n        ) {\n          favoritesList.children[i].style.display = 'block';\n        }\n      }\n\n      // Show the first page initially\n      showPage(currentPage);\n\n      // Generate pagination buttons\n      paginationBlock.innerHTML = '';\n      for (let i = 1; i <= totalPages; i++) {\n        const button = document.createElement('button');\n        button.textContent = i;\n        button.addEventListener('click', function () {\n          currentPage = i;\n          showPage(currentPage);\n          updateActiveButton(currentPage);\n        });\n        paginationBlock.appendChild(button);\n      }\n\n      // Function to update active button\n      function updateActiveButton(currentPage) {\n        const buttons = paginationBlock.querySelectorAll('button');\n        buttons.forEach((button, index) => {\n          if (index === currentPage - 1) {\n            button.classList.add('active-btn');\n          } else {\n            button.classList.remove('active-btn');\n          }\n        });\n      }\n      updateActiveButton(currentPage);\n    }\n\n    // Call paginate initially\n    paginate();\n\n    // Event listener for window resize\n    window.addEventListener('resize', paginate);\n\n    // Function to handle scroll behavior\n    function checkScroll() {\n      if (window.matchMedia('(min-width: 768px)').matches) {\n        favoritesContainerBlock.style.overflowY = 'scroll';\n      } else {\n        favoritesContainerBlock.style.overflowY = 'visible';\n      }\n\n      if (window.matchMedia('(min-width: 1440px)').matches) {\n        favoritesContainerBlock.style.maxHeight = '480px'; // Set maximum height if necessary\n      } else {\n        favoritesContainerBlock.style.maxHeight = 'none';\n      }\n\n      // Зробити скролінг менш інтенсивним і більш плавним\n      const scrollOptions = {\n        behavior: 'smooth',\n        block: 'start', // Налаштування скролінгу починається від верхнього краю елементу\n      };\n\n      window.scrollBy(0, 10); // Змінити значення, яке ви вважаєте відповідним\n    }\n\n    // Перевірка поведінки прокрутки при першому завантаженні\n    checkScroll();\n\n    // Check pagination visibility on initial load\n    togglePagination();\n\n    // Перевірка видимості пагінації та ініціалізація пагінації під час зміни розміру вікна\n    window.addEventListener('resize', function () {\n      togglePagination();\n      paginate();\n      checkScroll();\n    });\n\n    // Initialize pagination if needed\n    if (isFavoritesListVisible() && favoritesList.children.length >= 8) {\n      paginate();\n    }\n  });\n}\n\nfunction handleFavoritesListClick(event) {\n  if (\n    event.target.classList.contains('favorites-btn-trash') ||\n    event.target.classList.contains('favorites-icon-delete') ||\n    event.target.classList.contains('favorites-icon-delete-use')\n  ) {\n    const id = event.currentTarget.id;\n    deleteCard(id);\n  }\n}\n\nif (result === '/favorites.html') {\n  favoritesList.addEventListener('click', handleFavoritesListClick);\n}\n\nfunction deleteCard(id) {\n  const index = parsedItem.findIndex(item => item.id == id);\n  parsedItem.splice(index, 1);\n  localStorage.setItem(storage, JSON.stringify(parsedItem));\n  deleteCards.forEach(elem => {\n    if (elem.id == id) cardForDelete = elem;\n  });\n  if (cardForDelete) {\n    favoritesList.removeChild(cardForDelete);\n  }\n  if (!storageItem || parsedItem.length == 0) {\n    messageInfo.classList.add('is-open-message-info');\n    paginationBlock.classList.add('close');\n  }\n  renderFavoriteCards();\n}\n\nfunction renderFavoriteCards() {\n  // Очищаємо поточні карточки зі списку\n  favoritesList.innerHTML = '';\n  // Рендеримо кожну карточку у списку\n  parsedItem.forEach(elem => {\n    const markup = createFavoriteCardMarkup(elem);\n    // Вставляємо розмітку карточки у список улюблених елементів\n    favoritesList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\nfunction createFavoriteCardMarkup(elem) {\n  return `<li class=\"favorites-card favorites-list-item\" id ='${elem.id}'>\n      <div class='favorites-card-header'>\n        <div class='favorites-workout'>\n          <p class='workout-p'>workout</p>\n\n          <button class='favorites-btn-trash' type=\"button\">\n          <svg class='favorites-icon-delete' width='16' height='16' fill=\"none\">\n              <use class='favorites-icon-delete-use' href='${sprite}#icon-trash'></use>\n            </svg>\n          </button>\n        </div>\n        \n          <button class=\"favorites-btn-arrow\" type=\"button\" >Start\n            <svg width='14' height='14'>\n              <use href='${sprite}#icon-arrow'></use>\n            </svg>\n          </button>\n      </div>\n\n      <div class='favorites-main-container'>\n        <div class='favorites-icon-run-man'>\n          <svg width='14' height='14'>\n            <use href='${sprite}#icon-running'></use>\n          </svg>\n        </div>\n        <p class='favorites-name-part'>${elem.name}</p>\n      </div>\n\n      <ul class=\"favorites-card-footer-list\">\n        <li>\n          <p class='favorites-card-footer-title'>Burned calories: <span class='favorites-footer-text-value'>${elem.burnedCalories} / ${elem.time} min</span></p>\n        </li>\n        <li>\n          <p class='favorites-card-footer-title'>Body part: <span class='favorites-footer-text-value'>${elem.bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='favorites-card-footer-title'>Target: <span class='favorites-footer-text-value'>${elem.target}</span></p>\n        </li>\n      </ul>\n\n    </li>`;\n}\n\n//**Ігорю на кнопку*/\n\nconst favoritesButton = document.querySelector('.add-favorites');\nfunction toggleFavorite() {\n  if (favoritesButton.textContent.trim() == 'Add to favorites') {\n    parsedItem.push({\n      id: '64f389465ae26083f39b17df', //id\n      name: 'barbell one arm snatch', //name.textContent\n      target: 'cardiovascular', //target.textContent\n      time: '3', //time.textContent,\n      bodyPart: 'shoulders', //bodyPart.textContent\n      burnedCalories: '345', //burnedCalories.textContent\n    });\n    localStorage.setItem(storage, JSON.stringify(parsedItem));\n  }\n}\n\nfavoritesButton.addEventListener('click', toggleFavorite);\n\nexport { toggleFavorite };\n"],"names":["mobileMenu","openMenu","closeMenu","toggleMenu","isMenuOpen","onMatchMedia","event","quoteTextEl","authorEl","storedData","storedDate","currentDate","storedDateObj","isSameDay","updateUI","data","axios","error","date1","date2","fullUrl","lastSlashIndex","result","checkLocalStorageData","key","storageItem","storage","parsedItem","favoritesList","cardForDelete","messageInfo","paginationBlock","favoritesContainerBlock","deleteCards","createFavoriteCard","elem","markup","createFavoriteCardMarkup","togglePagination","isFavoritesListVisible","paginate","itemsPerPage","totalPages","i","currentPage","showPage","page","startIndex","endIndex","button","updateActiveButton","index","checkScroll","handleFavoritesListClick","id","deleteCard","item","renderFavoriteCards","sprite","favoritesButton","toggleFavorite"],"mappings":"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"}