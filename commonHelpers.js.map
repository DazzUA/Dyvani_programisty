{"version":3,"file":"commonHelpers.js","sources":["../src/js/home_js/exercises_filters.js","../src/js/home_js/exercises_pagination.js","../src/js/home_js/exercises_search.js","../src/js/home_js/footer.js","../src/img/symbol-defs.svg","../src/js/favorites_js/favorites_section.js"],"sourcesContent":["import axios from 'axios';\n\nconst filterButtons = document.querySelector('.FilterButtons');\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst pagination = document.querySelector('.Pagination');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet filterValueDefault = 'Muscles';\nlet currentPage = 1;\nlet screenWidth = window.innerWidth;\nlet currentLimit = 0;\n//-----------------------------------------------Слухачі------------------------------------------------------------------------\nfilterButtons.addEventListener('click', filterBtnClick);\npagination.addEventListener('click', onPaginationPages);\n//--------------------------------------------------Кількість картинок в залежності від розміру екрана---------------------------\nif (screenWidth <= 375) {\n  currentLimit = 8;\n} else if (screenWidth <= 768) {\n  currentLimit = 12;\n} else {\n  currentLimit = 12;\n}\n//---------------------------------------------------Запит на сервер-------------------------------------------------------------\nasync function getExercises() {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filterValueDefault,\n        page: currentPage,\n        limit: currentLimit,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Дефолтний запит для відображення Muscles при загрузці сторінки-----------------------\n\nasync function fetchDefaultApiUrl() {\n  try {\n    const response = await getExercises().then(data => {\n      const { results, totalPages, page } = data;\n      if (results && results.length > 0) {\n        markupExercises(results);\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        console.error('No exercises found.');\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n  }\n}\n\n//---------------------------------------------------Виклик функцію для відображення Muscles при загрузці сторінки-----------------------\n\nfetchDefaultApiUrl();\n\n//-----------------------------------------Функція фільтрів Muscles, Body parts, Equipment--------------------------------------------\nasync function filterBtnClick(event) {\n  event.preventDefault();\n\n  currentPage = 1;\n  const filterValue = event.target;\n  const qwer = filterValue.dataset.filter;\n  filterValueDefault = qwer;\n  exerciseFiltersList.innerHTML = '';\n  Array.from(event.currentTarget.children).map(item => {\n    if (item.textContent !== event.target.textContent) {\n      item.classList.remove('ButtonIsActive');\n    } else {\n      event.target.classList.add('ButtonIsActive');\n    }\n  });\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  try {\n    getExercises(qwer).then(data => {\n      const { results, totalPages, page } = data;\n      markupExercises(results);\n      if (1) {\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        pagination.innerHTML = '';\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n//-----------------------------------------Функція перехід по сторінкам------------------------------------------------------\n\nasync function onPaginationPages(e) {\n  currentPage = e.target.textContent;\n  Array.from(e.currentTarget.children).map(item => {\n    if (item.textContent !== currentPage) {\n      item.classList.remove('PaginationBtnIsActive');\n    } else {\n      e.target.classList.add('PaginationBtnIsActive');\n    }\n  });\n  exerciseFiltersList.innerHTML = '';\n  try {\n    const { results, page, totalPages } = await getExercises();\n    if (page === totalPages) {\n      return;\n    }\n\n    markupExercises(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Розмітка Muscles, Body parts, Equipment--------------------------------------------\n\nfunction markupExercises(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class=\"FilterList ExercisesItem\" data-filter='${filter}' data-name='${name}'>\n        <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div class=\"FilterText\">\n          <p class=\"FilterExercises\">${name}</p>\n          <p class=\"FilterName\">${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n//---------------------------------------------------Розмітка номерів сторінки--------------------------------------------\n\nfunction paginationPages(page, totalPages) {\n  let paginationHtml = '';\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"PaginationBtn PaginationBtnIsActive\" type=\"button\">${i}</button>`;\n  }\n  return paginationHtml;\n}\n","import axios from 'axios';\n\nconst filterButtons = document.querySelector('.FilterButtons');\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst ExercisesHead = document.querySelector('.ExercisesHead');\nconst pagination = document.querySelector('.Pagination');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet currentPage = 1;\nlet screenWidth = window.innerWidth;\nlet currentLimit = 0;\nlet filterValue;\nlet nameValue;\n\nexerciseFiltersList.addEventListener('click', onCardClick);\n\nasync function onCardClick(event) {\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // при кліку на картку додаємо клас до ul (бо він має інші стилі)\n  exerciseFiltersList.classList.add('ExerciseCategoryList');\n  // при кліку на картку шукаємо найближчий елемент у якого буде заданий селектор (це li)\n  const liEl = event.target.closest('.ExercisesItem');\n  console.log(liEl);\n  // тепер можемо отримати li дата-атрибути\n  filterValue = liEl.dataset.filter; //Muscles\n  nameValue = liEl.dataset.name; // abductors\n  // передаємо ці атрибути в функцію , яка робить запит\n  try {\n    const { page, perPage, totalPages, results } = await getExercisesByFilter(\n      filterValue,\n      nameValue\n    );\n    // це буде масив об'єктів\n    console.log(results);\n    exerciseFiltersList.innerHTML = createMarkUp(results);\n    // оновлюємо хедер секції Exercises\n    ExercisesHead.innerHTML = updateExercisesHeaderMarkup(nameValue);\n    // ------------------------------new КОД ДЛЯ ДЕНИСА --- ПОМИЛКА--- ПОКИ КОМЕНТУЮ\n    // const ExercisesForm = document.querySelector('.ExercisesForm');\n    // ExercisesForm.addEventListener(\n    //   'submit',\n    //   onFormSubmit(filterValue, nameValue)\n    // );\n\n    // async function onFormSubmit(query) {\n    //   try {\n    //     const url = `https://energyflow.b.goit.study/api/exercises?`;\n\n    //     const response = await axios.get(url, {\n    //       params: {\n    //         bodypart: 'back',\n    //         keyword: query,\n    //         page: 1,\n    //         limit: 9,\n    //       },\n    //     });\n    //     renderExercises(response.data.results); // Отображение результатов на странице\n    //   } catch (error) {\n    //     handleError(error); // Обработка ошибки при запросе данных\n    //   }\n    //   finally {\n    //     searchForm.reset(); // сброс полей форми\n    //   }\n    // }\n\n    // -------------------------------new  КОД ДЛЯ ДЕНИСА --- ПОМИЛКА--- ПОКИ КОМЕНТУЮ\n    // додаємо на три кнопки фільтрів слухача по кліку-------\n    const FilterBtn = document.querySelector('#FilterBtn');\n    FilterBtn.addEventListener('click', onBtnClick);\n    // пагінація\n    pagination.innerHTML = '';\n    if (totalPages > 1) {\n      // const pag це буде рядок розмітки кнопок(нумерація сторінок)\n      const pag = paginationPages(totalPages);\n      console.log(pag);\n      // додаємо в div розмітку сторінок\n      pagination.innerHTML = pag;\n    }\n    // else {\n    //   pagination.innerHTML = '';\n    // }\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!НОВЕ\n    // вішаємо на дів з кнопками нумерації сторінок слухача подій при кліку\n    pagination.addEventListener('click', onPaginationPages);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getExercisesByFilter(filterValue, nameValue, currentPage) {\n  // в запиті можливі три ключі, тому відповідно до значення фільтра пишемо цей ключ\n  try {\n    if (filterValue === 'Muscles') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          muscles: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else if (filterValue === 'Body parts') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          bodypart: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          equipment: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(({ rating, name, burnedCalories, time, bodyPart, target }) => {\n      return `<li class=\"WorkoutCard\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-star'></use>\n        </svg></div>\n        </div>\n        <div class='StartBtn'>\n          <p>Start</p>\n          <svg width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-arrow'></use>\n        </svg>\n        </div>\n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='./img/symbol-defs.svg#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\nfunction updateExercisesHeaderMarkup(nameValue) {\n  return `<div>\n  <h2 class=\"TitleExercises\">Exercises / <span class=\"NameValue\"> ${nameValue}</span></h2>\n  <div class=\"ExercisesHeared\">\n  <div class=\"ListExercises FilterButtons\" id='FilterBtn'>\n    <button class=\"ItemExercises\" data-filter=\"Muscles\">Muscles</button>\n    <button class=\"ItemExercises\" data-filter=\"Body parts\">Body parts</button>\n    <button class=\"ItemExercises\" data-filter=\"Equipment\">Equipment</button>\n  </div>\n    <form action=\"\" class=\"ExercisesForm\">\n      <label for=\"#search\" class=\"visually-hidden\">Search</label>\n      <input class='SearchInput' name=\"search\" placeholder=\"Search\" type=\"search\" id=\"search\" />\n      <button class='SearchButton' type=\"submit\">\n        <svg class='IconSearch' width='18' height='18'>\n          <use href='./img/symbol-defs.svg#icon-search'></use>\n        </svg>\n      </button>\n    </form></div>\n</div>\n`;\n}\n// ---------------------------------------------------------------------------------------------------------------------\n\n// тут має бути код для реалізації кліку назад на фільтри\n\n// це виклик функції Данила. Треба щоб він зробив експорт\n// функція, яка спрацбовує коли ми клікаємо по фільтру (Muscle, Body Part, Equipment)\nasync function onBtnClick(event) {\n  // робимо поточну сторінку першою\n  currentPage = 1;\n  // видаляємо з нумерації сторінок слухача попереднього\n  pagination.removeEventListener('click', onPaginationPages);\n  // pagination.addEventListener('click', onPaginationPagesbyFilter);\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // дістаємо значення дата-атрибута елемента, на який клацнули\n  filterValue = event.target.dataset.filter;\n  // чому робиш пустим ul при виклику функції?\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    const { page, perPage, totalPages, results } = await getExercise(\n      filterValue\n    );\n    console.log(totalPages);\n    // робимо розмітку всередині ul по фільтру починаюxи з першої сторінки\n    exerciseFiltersList.innerHTML = markupExercise(results);\n    // пагінація\n    if (totalPages > 1) {\n      // const pag це буде рядок розмітки кнопок(нумерація сторінок)\n      const pag = paginationPages(totalPages);\n      console.log(pag);\n      // додаємо в div розмітку сторінок\n      pagination.innerHTML = pag;\n    } else {\n      pagination.innerHTML = '';\n    }\n    pagination.addEventListener('click', onPaginationPagesbyFilter);\n    // тут видалення тексту після слеша та форми\n    const titleExercises = document.querySelector('.TitleExercises');\n    titleExercises.innerHTML = 'Exercises';\n    const ExercisesForm = document.querySelector('.ExercisesForm');\n    // ????????????????????????vформа видаляється при першому кліку, а при другому знову хоче видалити, а її вже нема????????????????????????????????????????????/\n    // ExercisesForm.remove();\n    console.log(titleExercises);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// по замовчувнню значення фільтра буде 'Muscles'\nasync function getExercise(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: currentPage,\n        limit: 12,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// функція отримує масив об'єктів\nfunction markupExercise(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div>\n          <p>${name}</p>\n          <p>${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n  // треба іннерhtml, щоб при кліку відбувалась заміна розмітки, а не продовження\n  // exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n// --------------------------------------------------------------------------------------\n\n// --------------------------------------------------------------------------------------\n\n// ПАГІНАЦІЯ\nfunction paginationPages(totalPages) {\n  let paginationHtml = '';\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"pagination-btn\" type=\"button\">${i}</button>`;\n  }\n  // в залежності від к-ті сторінок повертає таку кількість кнопок в розмітці\n  return paginationHtml;\n}\n\nasync function onPaginationPages(e) {\n  // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки: 1, 4, 7...)\n  currentPage = e.target.textContent;\n  console.log(currentPage); // 7\n  // очищує ul з картками\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    // запит на картки по фільтру\n    const { results, page, totalPages } = await getExercisesByFilter(\n      filterValue,\n      nameValue,\n      currentPage\n    );\n\n    // const filter = results[0].filter;\n\n    // if (page === totalPages) {\n    //   return;\n    // }\n    // робимо розмітку підкатегорій відповідно до номеру сторінки\n    exerciseFiltersList.innerHTML = createMarkUp(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// вішаємо слухач на дів з цифрами сторінок\n\nasync function onPaginationPagesbyFilter(e) {\n  // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки)\n  currentPage = e.target.textContent;\n  console.log(currentPage); // 7\n  // очищує ul з картками\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    // запит на картки по фільтру\n    const { results, page, totalPages } = await getExercise(\n      filterValue,\n      currentPage\n    );\n    console.log(results);\n    // const filter = results[0].filter;\n\n    // if (page === totalPages) {\n    //   return;\n    // }\n    exerciseFiltersList.innerHTML = markupExercise(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Импорт необходимых библиотек\n","// Что реализовано в коде:\n// Пользователь может вводить поисковый запрос и отправлять его на сервер;\n// После получения ответа от сервера, результаты поиска отображаются на странице;\n// В случае отсутствия результатов поиска выводится соответствующее уведомление.\n\nimport axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// базовый URL для отправки запросов к API\nconst BASE_URL = 'https://energyflow.b.goit.study/api/exercises';\n\n// объект с ссылками на форму поиска, поле ввода и список результатов поиска\nconst refs = {\n  searchForm: document.querySelector('.SearchExercises'),\n  searchInput: document.querySelector('.SearchInput'),\n  searchList: document.querySelector('.SearchExercisesList'),\n};\n\n// передаем параметры запроса при выполнении запроса к API. Задаем начальные параметры для поиска.\nconst queryParams = {\n  query: '', // строка запроса для поиска\n  page: 1, // по умолчанию отображается первая страница результатов\n};\n\n// повесили слушателя события submit на форму поиска, который вызывает функцию handleSearch при отправке формы.\nrefs.searchForm.addEventListener('submit', handleSearch);\n\n// Определяем асинхронную функцию handleSearch. Функция принимает событие в качестве аргумента\n\nasync function handleSearch(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение формы\n\n  // Очищаем список результатов поиска перед новым запросом\n  refs.searchList.innerHTML = '';\n\n  // Обновляем параметры запроса queryParams.\n  queryParams.page = 1;\n  const form = event.currentTarget;\n  queryParams.query = form.elements.query.value.trim();\n\n  if (!queryParams.query) {\n    return;\n  }\n\n  // Вызываем функция onFormSubmit с передачей параметров запроса.\n  await onFormSubmit(queryParams);\n}\n\n// Определяем асинхронную функцию onFormSubmit. Функция принимает объект запроса query\nasync function onFormSubmit(query) {\n  try {\n    // Выполняем GET-запрос к API с передачей параметров запроса. Результат запроса сохраняем в переменной response\n    const response = await axios.get(`${BASE_URL}`, {\n      params: {\n        bodypart: '',\n        muscles: '',\n        equipment: '',\n        keyword: query.query, // эти значения из queryParams\n        page: query.page,\n        limit: 9,\n      },\n    });\n    // Вызываем функцию renderExercises с передачей массива упражнений из ответа\n    renderExercises(response.data.results);\n  } catch (error) {\n    handleError(error); // Вывод ошибки в консоль при возникновении ошибки запроса\n  }\n}\n// Определяем функцию renderExercises. Функция принимает массив упражнений. Если массив пустой, вызывается функция showNoResultsToast. Если нет - создаются элементы списка 'li' с названиями упражнений и добавляются в список результатов поиска.\n\nfunction renderExercises(exercises) {\n  if (exercises.length === 0) {\n    showNoResultsToast(); // Вызов функции showNoResultsToast при отсутствии результатов поиска\n  } else {\n    exercises.forEach(exercise => {\n      const exerciseItem = document.createElement('li');\n      exerciseItem.textContent = exercise.name;\n\n      // Используем refs для доступа к searchList\n      refs.searchList.appendChild(exerciseItem);\n    });\n  }\n}\n\n// Функция для вывода всплывающего уведомления с сообщением о отсутствии результатов поиска\nfunction showNoResultsToast() {\n  iziToast.error({\n    title: 'No Results',\n    message:\n      'Unfortunately, no results were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs',\n  });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport axios from 'axios';\n\nconst refs = {\n  form: document.querySelector('.footerForm'),\n  input: document.querySelector('.formInput'),\n  submit: document.querySelector('.modalButton'),\n};\nconst BASE_URL = 'https://energyflow.b.goit.study/api/subscription';\nconst localStorageKey = 'feedback-form-state';\nconst localFormData = JSON.parse(localStorage.getItem(localStorageKey));\n\nif (localFormData !== null && localFormData !== undefined) {\n  refs.input.value = localFormData.email;\n} else {\n  refs.input.value = '';\n}\n\nrefs.submit.addEventListener('click', searchForm);\nasync function searchForm(event) {\n  const email = refs.input.value.trim();\n  event.preventDefault();\n  try {\n    const response = await axios.post(BASE_URL, {\n      email: email,\n    });\n    iziToast.show({\n      position: 'topRight',\n      message: JSON.stringify(\n        JSON.parse(response.request.responseText).message\n      ),\n      maxWidth: '352',\n      messageColor: '#fff',\n      messageSize: '15px',\n      backgroundColor: 'rgba(27, 27, 27, 0.7)',\n      close: false,\n      closeOnClick: true,\n    });\n    refs.input.value = '';\n  } catch (error) {\n    iziToast.show({\n      position: 'topRight',\n      message: JSON.stringify(JSON.parse(error.request.responseText).message),\n      maxWidth: '352',\n      messageColor: '#fff',\n      messageSize: '15px',\n      backgroundColor: 'rgba(27, 27, 27, 0.7)',\n      close: false,\n      closeOnClick: true,\n    });\n\n    refs.input.value = '';\n  }\n}\n// loader\n// const loaderForm = document.querySelector('.loader');\n// loader для очікування відповіді на клік\n// function showLoader(state = true) {\n//   refs.loaderForm.style.display = !state ? 'none' : 'inline-block';\n//   filterButtons.disabled = state;\n// jjjj}\n","export default \"__VITE_ASSET__e98efecf__\"","import sprite from '../../img/symbol-defs.svg';\nconst fullUrl = window.location.pathname;\nconst lastSlashIndex = fullUrl.lastIndexOf('/');\nconst result = '/page-2.html'; //fullUrl.substring(lastSlashIndex);\n\nlet storage = 'favorites';\nlet storageItem = localStorage.getItem(storage);\n// Перевірка, чи є дані для ключа 'favorites' в локальному сховищі\nif (!storageItem) {\n  // Якщо немає даних, додати порожній масив за замовчуванням\n  localStorage.setItem(storage, JSON.stringify([]));\n  // Перевизначити змінну storageItem з порожнім масивом\n  storageItem = '[]';\n}\n\n// Перетворити рядок JSON на об'єкт або масив\nlet parsedItem = JSON.parse(storageItem);\nconst favorites = document.querySelector('.add-favorites');\nconst favoritesList = document.querySelector('.favorites-list');\nlet id = '';\nlet cardForDelete;\nconst messageInfo = document.querySelector('.message-favorites');\nconst paginationBlock = document.querySelector('.favorites-pagination-block');\nconst favoritesContainerBlock = document.querySelector(\n  '.div-favorites-section'\n);\nconst ul = document.querySelector('.favorites-list');\nconst deleteCards = document.querySelectorAll('.favorites-list-item');\n\n/**перевіряє чи є в локалсторідж запис і якщо є, то малює картки, інакше показує повідомлення */\nif (result === '/page-2.html') {\n  if (!storageItem || parsedItem.length == 0) {\n    messageInfo.classList.add('is-open-message-favorites');\n    paginationBlock.classList.add('close');\n  } else if (storageItem) {\n    try {\n      parsedItem.forEach(elem => {\n        const markup = `<li class=\"favorites-list-item\" id=\"${elem.id}\">\n            <div class=\"favorites-card-header\">\n                <div class=\"favorites-workout\">\n                    <p>WORKOUT</p>\n                </div>\n                <button class=\"favorites-btn-trash\" aria-label=\"trash\" type=\"button\">\n                    <svg class=\"favorites-icon-delete\" width=\"16\" height=\"16\" fill=\"none\">\n                        <use class=\"favorites-icon-delete-use\" href=\"${sprite}#icon-trash\"></use>\n                    </svg>\n                </button>\n                <button\n                    data-id=\"${elem.id}\"\n                    class=\"favorites-btn-arrow\"\n                    aria-label=\"start\"\n                    type=\"button\">Start\n                        <svg class=\"favorites-icon-arrow\" width=\"14\" height=\"14\" stroke=\"#1B1B1B\">\n                            <use class=\"favorites-icon-arrow-use\" href=\"${sprite}#icon-arrow\"></use>\n                        </svg>\n                </button>\n                </div>\n                <div class=\"favorites-main-container\">\n\n                <div class=\"favorite-icon-run-man\">\n                <svg width=\"14\" height=\"14\">\n          <use href=\"${sprite}#icon-running\"></use>\n        </svg></div>                  \n                    <h3 class=\"favorites-name-part\">${elem.name}</h3>\n                </div>\n                <div class=\"favorites-card-footer\">\n                <ul class=\"favorites-card-footer-list\">\n                    <li class=\"favorites-card-footer-item\">\n                        <div class=\"favorites-card-footer-wrapper\">\n                            <h4 class=\"favorites-card-footer-title\">Burned calories:</h4>\n                            <p class=\"favorites-card-footer-block\">${elem.burnedCalories}</p>\n                        </div>\n                        <div class=\"favorites-card-footer-wrapper\">\n                            <h4 class=\"favorites-card-footer-title\">Body part:</h4>\n                            <p class=\"favorites-card-footer-block\">${elem.bodyPart}</p>\n                        </div>\n                        <div class=\"favorites-card-footer-wrapper\">\n                            <h4 class=\"favorites-card-footer-title\">Target:</h4>\n                            <p class=\"favorites-card-footer-block\">${elem.target}</p>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </li>`;\n\n        favoritesList.insertAdjacentHTML('beforeend', markup);\n      });\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n}\n\nif (result === '/page-2.html') {\n  ul.addEventListener('click', event => {\n    if (\n      event.target.classList.contains('favorites-btn-trash') ||\n      event.target.classList.contains('favorites-icon-delete') ||\n      event.target.classList.contains('favorites-icon-delete-use')\n    ) {\n      id = event.currentTarget.id;\n      const index = parsedItem.findIndex(item => item.id == id);\n      parsedItem.splice(index, 1);\n      localStorage.setItem(storage, JSON.stringify(parsedItem));\n      deleteCards.forEach(elem => {\n        if (elem.id == id) cardForDelete = elem;\n      });\n      if (cardForDelete) {\n        ul.removeChild(cardForDelete);\n      }\n      if (!storageItem || parsedItem.length == 0) {\n        messageInfo.classList.add('is-open-message-info');\n        paginationBlock.classList.add('close');\n      }\n    }\n    location.reload();\n  });\n}\n\nif (result === '/page-2.html') {\n  document.addEventListener('DOMContentLoaded', function () {\n    // Function to show pagination based on screen width\n    function togglePagination() {\n      const currentPage = window.location.pathname; // Get current page path\n\n      // Check if current page is '/page-2.html' and screen width is less than or equal to 767px\n      if (\n        window.innerWidth <= 767 &&\n        isFavoritesListVisible()\n        /*currentPage === '/fitnes-app/page-2.html' &&\n        window.innerWidth <= 767 &&\n        isFavoritesListVisible()*/\n      ) {\n        // Show pagination for small screens on page 2\n        paginationBlock.style.display = 'flex';\n      } else {\n        // Hide pagination for larger screens or if favorites list is not visible\n        paginationBlock.style.display = 'none';\n      }\n    }\n\n    // Function to check if favorites list is visible\n    function isFavoritesListVisible() {\n      return favoritesList && favoritesList.offsetParent !== null;\n    }\n\n    // Function to handle pagination logic\n    function paginate() {\n      // Define items per page based on screen width and visibility of favorites list\n      const itemsPerPage =\n        window.innerWidth <= 767 && isFavoritesListVisible()\n          ? 6\n          : favoritesList.children.length;\n\n      // Show all items if screen width is greater than 767px\n      if (window.innerWidth > 767 && isFavoritesListVisible()) {\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'block';\n        }\n        return;\n      }\n\n      const totalPages = Math.ceil(\n        favoritesList.children.length / itemsPerPage\n      );\n\n      let currentPage = 1;\n\n      // Function to show items for current page\n      function showPage(page) {\n        const startIndex = (page - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n\n        // Hide all items\n        for (let i = 0; i < favoritesList.children.length; i++) {\n          favoritesList.children[i].style.display = 'none';\n        }\n\n        // Show items for current page\n        for (\n          let i = startIndex;\n          i < endIndex && i < favoritesList.children.length;\n          i++\n        ) {\n          favoritesList.children[i].style.display = 'block';\n        }\n      }\n\n      // Show the first page initially\n      showPage(currentPage);\n\n      // Event listeners for pagination buttons\n      paginationBlock.addEventListener('click', function (event) {\n        if (event.target.tagName === 'BUTTON') {\n          // Remove active class from all buttons\n          const buttons = paginationBlock.querySelectorAll('button');\n          buttons.forEach(button => button.classList.remove('active-btn'));\n\n          // Add active class to the clicked button\n          event.target.classList.add('active-btn');\n\n          // Show the corresponding page\n          currentPage = parseInt(event.target.textContent);\n          showPage(currentPage);\n        }\n      });\n    }\n\n    // Function to handle scroll behavior\n    function checkScroll() {\n      if (window.matchMedia('(min-width: 768px)').matches) {\n        favoritesContainerBlock.style.overflowY = 'scroll';\n      } else {\n        favoritesContainerBlock.style.overflowY = 'visible';\n      }\n\n      if (window.matchMedia('(min-width: 1440px)').matches) {\n        favoritesContainerBlock.style.maxHeight = '480px'; // Set maximum height if necessary\n      } else {\n        favoritesContainerBlock.style.maxHeight = 'none';\n      }\n    }\n\n    // Check scroll behavior on initial load\n    checkScroll();\n\n    // Check pagination visibility on initial load\n    togglePagination();\n\n    // Check pagination visibility and initialize pagination on window resize\n    window.addEventListener('resize', function () {\n      togglePagination();\n      paginate();\n      checkScroll();\n    });\n\n    // Initialize pagination if needed\n    if (isFavoritesListVisible() && favoritesList.children.length >= 6) {\n      paginate();\n    }\n  });\n}\n\n//**Ігорю на кнопку*/\n\nfavorites.addEventListener('click', () => {\n  if (favorites.textContent.trim() == 'Add to favorites') {\n    parsedItem.push({\n      id: '64f389465ae26083f39b17df', //id\n      gifUrl: 'https://ftp.goit.study/img/power-pulse/gifs/0067.gif', //gif.src\n      name: 'barbell one arm snatch', //name.textContent\n      rating: '3.67', //rating.textContent\n      target: 'delts', //target.textContent\n      popular: '5548', //popular.textContent\n      bodyPart: 'shoulders', //bodyPart.textContent\n      equipment: 'barbell', //equipment.textContent\n      burnedCalories: '345', //burnedCalories.textContent\n      description:\n        'Located at the shoulders, deltoids have three heads: anterior, lateral, and posterior. They are involved in various arm movements like lifting and rotating. Exercises include shoulder press, lateral raises, and front raises.', //description.textContent\n    });\n    localStorage.setItem(storage, JSON.stringify(parsedItem));\n    favorites.textContent = `Delete from favorites`;\n    favorites.innerHTML = `Delete from favorites`;\n  } else {\n    const index = parsedItem.findIndex(item => item.id == id);\n    parsedItem.splice(index, 1);\n    localStorage.setItem(storage, JSON.stringify(parsedItem));\n    const fullCards = document.querySelectorAll('.favorites-list-item');\n\n    favorites.textContent = `Add to favorities`;\n    //favorites.innerHTML = `Add to favorities ${heartIcon}`;\n    if (document.querySelector(`.favorites-list-item[id=\"${id}\"]`)) {\n      fullCards.forEach(elem => {\n        if (elem.id == id) cardForDelete = elem;\n      });\n      list.removeChild(cardForDelete);\n      if (!storageItem || parsedItem.length == 0) {\n        messageInfo.classList.add('is-open-message-info');\n        paginationBlock.classList.add('close');\n      }\n    }\n  }\n  location.reload();\n});\n"],"names":["filterButtons","exerciseFiltersList","pagination","BASE_URL","filterValueDefault","currentPage","screenWidth","currentLimit","filterBtnClick","onPaginationPages","getExercises","axios","error","fetchDefaultApiUrl","response","data","results","totalPages","page","markupExercises","pag","paginationPages","event","qwer","item","markup","name","filter","imgUrl","paginationHtml","i","ExercisesHead","filterValue","nameValue","onCardClick","liEl","perPage","getExercisesByFilter","createMarkUp","updateExercisesHeaderMarkup","onBtnClick","array","rating","burnedCalories","time","bodyPart","target","getExercise","markupExercise","onPaginationPagesbyFilter","titleExercises","ExercisesForm","refs","queryParams","handleSearch","form","onFormSubmit","query","renderExercises","exercises","showNoResultsToast","exercise","exerciseItem","iziToast","localStorageKey","localFormData","searchForm","email","sprite","fullUrl","storage","storageItem","parsedItem","favorites","favoritesList","id","cardForDelete","messageInfo","paginationBlock","favoritesContainerBlock","ul","deleteCards","elem","index","togglePagination","isFavoritesListVisible","paginate","itemsPerPage","showPage","startIndex","endIndex","button","checkScroll","fullCards"],"mappings":"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"}